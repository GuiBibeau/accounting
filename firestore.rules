rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // This rule allows anyone with your Firestore database reference to view, edit,
    // and delete all data in your Firestore database. It is useful for getting
    // started, but it is configured to expire after 30 days because it
    // leaves your app open to attackers. At that time, all client
    // requests to your Firestore database will be denied.
    //
    // Make sure to write security rules for your app before that time, or else
    // all client requests to your Firestore database will be denied until you Update
    // your rules

    // Rules for the new 'videos' collection
    match /videos/{videoId} {
      // Allow creation if user is authenticated and the userId in the document matches their UID
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      // Allow read, update, delete if user is authenticated and owns the document
      allow read, update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
      // Add specific field validation for update if needed later
    }

    // Keep the temporary rule for other documents until more specific rules are added
    match /{document=**} {
      allow read, write: if request.time < timestamp.date(2025, 5, 13);
    }
  }
}
